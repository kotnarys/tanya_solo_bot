import re
import logging
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from core.config import PERMANENT_ACCESS_IDS, REFERRAL_BONUS
from core.database import db
from services.referral_getcourse import send_referral_data_to_getcourse
from utils.message_utils import answer_split_text

logger = logging.getLogger(__name__)
router = Router()

class ReferralStates(StatesGroup):
    waiting_for_email = State()
    waiting_for_referrer_id = State()

def get_referral_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üéÅ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞", callback_data="referral_main")],
    ])
    return keyboard

def get_referral_main_keyboard(user_id: int):
    """–ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    buttons = []
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    if db.is_referral_user_registered(user_id):
        referral_info = db.get_referral_info(user_id)
        
        # –ï—Å–ª–∏ email –Ω–µ —É–∫–∞–∑–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è email
        if not referral_info or not referral_info.get('email'):
            buttons.append([InlineKeyboardButton(text="üìß –£–∫–∞–∑–∞—Ç—å email", callback_data="referral_register")])
        # –ï—Å–ª–∏ email —É–∫–∞–∑–∞–Ω - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –∫–Ω–æ–ø–æ–∫ –Ω–µ –Ω—É–∂–Ω–æ
    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≤—Å–µ–º –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
        buttons.append([InlineKeyboardButton(text="üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", callback_data="referral_register")])
    
    buttons.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard

def has_referral_access(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ—Å—Ç—É–ø –∫ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ"""
    from core.database import db
    return db.is_user_subscribed(user_id)

@router.callback_query(F.data == "referral_main")
async def referral_main_menu(callback: CallbackQuery):
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    user_id = callback.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
    if not has_referral_access(user_id):
        await callback.answer("‚ùå –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º", show_alert=True)
        return
    
    await callback.answer()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ —É–∫–∞–∑–∞–Ω –ª–∏ email
    if db.is_referral_user_registered(user_id):
        referral_info = db.get_referral_info(user_id)
        
        # –ï—Å–ª–∏ email –Ω–µ —É–∫–∞–∑–∞–Ω, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –µ–≥–æ
        if not referral_info or not referral_info.get('email'):
            text = """üéÅ <b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b>

‚ú® –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É!
üí∞ –ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞ –ø–æ–ª—É—á–∞–π—Ç–µ <b>500 ‚ÇΩ</b> –±–æ–Ω—É—Å–æ–≤

üìß <b>–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –≤–∞—à email</b>

‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b> –£–∫–∞–∂–∏—Ç–µ —Ç–æ—Ç –∂–µ email, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ GetCourse –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ"""
            
            await callback.message.answer(text, reply_markup=get_referral_main_keyboard(user_id))
            return
        
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        balance = referral_info['referral_balance'] if referral_info else 0
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
        bot_username = "ai_tatyana_solo_bot"
        referral_link = f"https://t.me/{bot_username}?start=r{user_id}"
        
        text = f"""üéÅ <b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b>

üìß <b>Email:</b> {referral_info['email']}
üí∞ <b>–í–∞—à –±–∞–ª–∞–Ω—Å:</b> {balance} ‚ÇΩ
‚ú® <b>–ë–æ–Ω—É—Å –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ:</b> {REFERRAL_BONUS} ‚ÇΩ

üîó <b>–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</b>
<code>{referral_link}</code>

üìã <b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>
1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –¥—Ä—É–∑—å—è–º
2. –û–Ω–∏ –ø–µ—Ä–µ—Ö–æ–¥—è—Ç –ø–æ —Å—Å—ã–ª–∫–µ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—Ç—Å—è
3. –ü—Ä–∏ –ø–µ—Ä–≤–æ–π –æ–ø–ª–∞—Ç–µ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ {REFERRAL_BONUS} ‚ÇΩ

üí∏ –ë–æ–Ω—É—Å—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –∫–∞–∫ —Å–∫–∏–¥–∫–∞ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –ø–æ–¥–ø–∏—Å–∫–∏

‚ö†Ô∏è <b>–í–∞–∂–Ω–æ –¥–ª—è –¥—Ä—É–∑–µ–π:</b>
‚Ä¢ –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞–∂–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /start, –∞ –Ω–µ –∫–Ω–æ–ø–∫—É START
‚Ä¢ –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω—É–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É"""
    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤–æ–æ–±—â–µ
        text = """üéÅ <b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b>

‚ú® –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –±–æ–Ω—É—Å—ã!
üí∞ –ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞: <b>500 ‚ÇΩ</b>
üí∏ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ–Ω—É—Å—ã –∫–∞–∫ —Å–∫–∏–¥–∫—É –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É

üìù <b>–î–ª—è —É—á–∞—Å—Ç–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å —É–∫–∞–∑–∞–Ω–∏–µ–º email</b>"""
    
    await callback.message.answer(text, reply_markup=get_referral_main_keyboard(user_id))

@router.callback_query(F.data == "referral_register")
async def referral_register_start(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞–ª–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ"""
    user_id = callback.from_user.id
    
    if not has_referral_access(user_id):
        await callback.answer("‚ùå –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º", show_alert=True)
        return
    
    await callback.answer()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ email —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if db.is_referral_user_registered(user_id):
        referral_info = db.get_referral_info(user_id)
        if referral_info and referral_info.get('email'):
            await callback.message.answer("‚úÖ –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ!", 
                                            reply_markup=get_referral_main_keyboard(user_id))
            return
    
    text = """üìù <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ</b>

–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —É–∫–∞–∑—ã–≤–∞–ª–∏ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ GetCourse:

‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b> Email –¥–æ–ª–∂–µ–Ω —Ç–æ—á–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å —Ç–µ–º, —á—Ç–æ —É–∫–∞–∑–∞–Ω –≤ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ."""
    
    await callback.message.answer(text)
    await state.set_state(ReferralStates.waiting_for_email)

@router.message(ReferralStates.waiting_for_email)
async def process_email_registration(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ email"""
    user_id = message.from_user.id
    email = message.text.strip()
    
    # –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è email
    email_pattern = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
    if not re.match(email_pattern, email):
        await message.answer("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if db.is_referral_user_registered(user_id):
        referral_info = db.get_referral_info(user_id)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º email –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db.update_referral_user_email(user_id, email)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ GetCourse —Å —Ç–µ–∫—É—â–∏–º –±–∞–ª–∞–Ω—Å–æ–º
        current_balance = referral_info.get('referral_balance', 0) if referral_info else 0
        await send_referral_data_to_getcourse(email, current_balance)
        
        text = f"""‚úÖ <b>Email –æ–±–Ω–æ–≤–ª–µ–Ω!</b>

üìß Email: {email}
üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {current_balance} ‚ÇΩ

üéâ –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–æ–π!"""
    else:
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db.register_referral_user(user_id, email)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ GetCourse
        await send_referral_data_to_getcourse(email, 0)
        
        text = f"""‚úÖ <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</b>

üìß Email: {email}
üí∞ –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: 0 ‚ÇΩ

üéâ –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –∏ –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –¥—Ä—É–∑–µ–π!"""
    
    await state.clear()
    await message.answer(text, reply_markup=get_referral_main_keyboard(user_id))


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞ (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ payment handler)
async def add_referral_bonus_if_needed(user_id: int):
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å, –µ—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–∞—è –æ–ø–ª–∞—Ç–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        logger.info(f"–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        
        referral_info = db.get_referral_info(user_id)
        if not referral_info or not referral_info['referrer_user_id']:
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –±—ã–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ")
            return  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –±—ã–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω
        
        referrer_id = referral_info['referrer_user_id']
        logger.info(f"–ù–∞–π–¥–µ–Ω —Ä–µ—Ñ–µ—Ä {referrer_id} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—á–∏—Å–ª—è–ª—Å—è –ª–∏ —É–∂–µ –±–æ–Ω—É—Å –∑–∞ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        conn = db._Database__get_connection() if hasattr(db, '_Database__get_connection') else None
        if not conn:
            import sqlite3
            conn = sqlite3.connect(db.db_path)
        
        cursor = conn.cursor()
        cursor.execute('''
            SELECT 1 FROM referral_bonuses 
            WHERE referrer_user_id = ? AND referred_user_id = ?
        ''', (referrer_id, user_id))
        
        if cursor.fetchone():
            conn.close()
            logger.info(f"–ë–æ–Ω—É—Å —É–∂–µ –±—ã–ª –Ω–∞—á–∏—Å–ª–µ–Ω —Ä–µ—Ñ–µ—Ä—É {referrer_id} –∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            return  # –ë–æ–Ω—É—Å —É–∂–µ –Ω–∞—á–∏—Å–ª—è–ª—Å—è
        
        conn.close()
        
        # –ù–∞—á–∏—Å–ª—è–µ–º –±–æ–Ω—É—Å
        logger.info(f"–ù–∞—á–∏—Å–ª—è–µ–º –±–æ–Ω—É—Å {REFERRAL_BONUS} —Ä—É–±. —Ä–µ—Ñ–µ—Ä—É {referrer_id} –∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        if db.add_referral_bonus(referrer_id, user_id, REFERRAL_BONUS):
            logger.info(f"–ë–æ–Ω—É—Å —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∏—Å–ª–µ–Ω —Ä–µ—Ñ–µ—Ä—É {referrer_id}")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –±–∞–ª–∞–Ω—Å –≤ GetCourse
            referrer_info = db.get_referral_info(referrer_id)
            if referrer_info and referrer_info['email']:
                logger.info(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –±–∞–ª–∞–Ω—Å –≤ GetCourse –¥–ª—è {referrer_info['email']}")
                await send_referral_data_to_getcourse(
                    referrer_info['email'], 
                    referrer_info['referral_balance']
                )
            else:
                logger.warning(f"Email –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞ {referrer_id}")
                
        else:
            logger.error(f"–û—à–∏–±–∫–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –±–æ–Ω—É—Å–∞ —Ä–µ—Ñ–µ—Ä—É {referrer_id}")
            
        logger.info(f"–ó–∞–≤–µ—Ä—à–µ–Ω–æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞: {e}")